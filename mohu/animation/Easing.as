package mohu.animation {	public class Easing {		public static const LINEAR:Function = function (t:Number):Number { 			return t; 		};		public static const EASE_IN:Function = function (t:Number):Number { 			return t * t; 		};		public static const EASE_OUT:Function = function (t:Number):Number { 			return -t * (t - 2); 		};		public static const EASE_IN_OUT:Function = function (t:Number):Number { 			return ((t *= 2) < 1) ? 0.5 * t * t : (-0.5 * ((--t) * (t - 2) - 1)); 		};		public static const EASE_IN_QUART:Function = function (t:Number):Number { 			return t * t * t * t; 		};		public static const EASE_OUT_QUART:Function = function (t:Number):Number { 			return -((--t) * t * t * t - 1); 		};		public static const EASE_IN_OUT_QUART:Function = function (t:Number):Number { 			return ((t *= 2) < 1) ? (0.5 * t * t * t * t) : -0.5 * ((t -= 2) * t * t * t - 2); 		};		public static const EASE_IN_ELASTIC:Function = function (t:Number):Number { 			return 33 * t * t * t * t * t + -59 * t * t * t * t + 32 * t * t * t + -5 * t * t + 0 * t; 		};		public static const EASE_OUT_ELASTIC:Function = function (t:Number):Number { 			return 37.5 * t * t * t * t * t + -121 * t * t * t * t + 144 * t * t * t + -76 * t * t + 16.5 * t; 		};		public static const EASE_OUT_BACK:Function = function (t:Number):Number { 			return -10.5 * t * t * t * t * t + 33.5 * t * t * t * t + -32 * t * t * t + 5 * t * t + 5 * t; 		};		public static const EASE_OUT_BOUNCE:Function = function (t:Number):Number { 			return ((t < (1 / 2.75)) ? 7.5625 * t * t : (t < (2 / 2.75) ? 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75 : ((t < (2.5 / 2.75)) ? 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375 : 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375))); 		};		public static const PARABOLA:Function = function (t:Number):Number { 			return 1 - (t = t * 2 - 1) * t; 		};	}}