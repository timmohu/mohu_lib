package mohu.core.display.effects {	import flash.display.DisplayObjectContainer;	import flash.geom.Rectangle;	public class NoiseAnimation {		private var _target:DisplayObjectContainer;		private var _noise:NoiseOverlay;		private var _bounds:Rectangle;		private var _currentFrame:uint;		public function NoiseAnimation(_target:DisplayObjectContainer, _alpha:Number = 0.1, _scale:Number = 2, _bounds:Rectangle = null) {			_target = _target;			if (_bounds) _bounds = _bounds;			if (!_bounds) _bounds = target.getBounds(target);			_noise = new NoiseOverlay(_bounds.width, _bounds.height, _alpha, _scale);			noise.x = _bounds.x;			noise.y = _bounds.height;		}						public function set currentFrame( value:uint ):void {			_currentFrame = value;			if (visible) updateAppearance();		}						public function get currentFrame( ):uint {			return _currentFrame;		}						protected function updateAppearance():void {			if (!noise.parent || !visible) return;			target.setChildIndex(noise, target.numChildren - 1);			if (currentFrame % 2 == 0) noise.redraw();		}						public function get target():DisplayObjectContainer {			return _target;		}						private function get noise():NoiseOverlay {			return _noise;		}						public function get bounds():Rectangle {			return (_bounds ? _bounds : target.getBounds(target));		}						public function set bounds(_value:Rectangle):void {			_bounds = _value;		}						public function get visible():Boolean {				return noise.visible; 		}						public function get scale():Number { 			return noise.scale; 		}						public function get alpha():Number { 			return noise.alpha; 		}						public function get width():Number { 			return noise.width; 		}						public function get height():Number { 			return noise.height; 		}						public function set visible( value:Boolean ):void {			if (visible == value) return;			if (value) noise.redraw();			noise.visible = value;		}	}}