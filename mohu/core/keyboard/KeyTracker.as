package mohu.core.keyboard {	import flash.display.InteractiveObject;	import flash.events.EventDispatcher;	import flash.events.KeyboardEvent;	/**	 * @author Tim Kendrick	 */	public class KeyTracker extends EventDispatcher {		private var _target:InteractiveObject;		private var _keys:Object = {};		public function KeyTracker(_target:InteractiveObject) {			super();			_target = _target;			target.addEventListener(KeyboardEvent.KEY_DOWN, onKeyDown, false, 0, true);			target.addEventListener(KeyboardEvent.KEY_UP, onKeyUp, false, 0, true);		}						public function release():void {			target.removeEventListener(KeyboardEvent.KEY_DOWN, onKeyDown);			target.removeEventListener(KeyboardEvent.KEY_UP, onKeyUp);		}						private function onKeyDown(_e:KeyboardEvent):void {			if (keys[_e.keyCode]) return;			keys[_e.keyCode] = true;			dispatchEvent(_e);		}						private function onKeyUp(_e:KeyboardEvent):void {			delete keys[_e.keyCode];			dispatchEvent(_e);		}						public function isPressed(_keyCode:uint):Boolean {			return Boolean(keys[_keyCode]);		}						public function get pressedKeys():Array {			var a:Array = [];			for ( var s : String in keys ) a.push(uint(s));			return a;		}						private function get target():InteractiveObject {			return _target;		}						private function get keys():Object {			return _keys;		}	}}